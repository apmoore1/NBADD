from pathlib import Path

from allennlp.models.archival import load_archive
from allennlp.predictors import Predictor

import nbadd

class TestDialectPredictor():

    def test_uses_named_inputs(self):
        inputs = {"text": "\u0628\u0639\u062f\u064a\u0646 \u0627\u0648\u0643\u064a \u0627\u0644\u062a\u0628\u0630\u064a\u0631 \u062d\u0631\u0627\u0645 \u0628\u0633 \u0628\u0639\u062f \u0627\u0644\u0628\u062e\u0644 \u0648\u0627\u0646\u064a \u0627\u062d\u0631\u0645 \u0646\u0641\u0633\u064a \u0645\u0646 \u0627\u0646\u0629 \u0641\u0644\u0648\u0633\u064a \u062a\u0631\u064a\u062d\u0646\u064a \u0648\u062a\u0639\u0632\u0646\u064a \u0645\u0627\u062a\u0639\u062a\u0642\u062f \u064a\u0627\u0643\u0627\u062a\u0628\u0646\u0627 \u0627\u0646\u0629 \u0627\u062c\u062d\u0627\u0641 \u0628\u062d\u0642 \u0627\u0644\u0646\u0641\u0633 !"}
        model_dir = Path(__file__, '..', '..', 'test_data', 'saved_models')
        model_file = Path(model_dir, 'model.tar.gz').resolve()
        archive = load_archive(model_file)
        predictor = Predictor.from_archive(archive, 'dialect-predictor')

        prediction_results = predictor.predict_json(inputs)
        class_probabilities = prediction_results.get('class_probabilities')
        label = prediction_results.get('label')
        
        assert class_probabilities is not None
        assert label is not None
        
        assert isinstance(class_probabilities, list)
        assert isinstance(label, str)
        assert label == 'DIAL_GLF'

        inputs = [{"text": "\u0628\u0639\u062f\u064a\u0646 \u0627\u0648\u0643\u064a \u0627\u0644\u062a\u0628\u0630\u064a\u0631 \u062d\u0631\u0627\u0645 \u0628\u0633 \u0628\u0639\u062f \u0627\u0644\u0628\u062e\u0644 \u0648\u0627\u0646\u064a \u0627\u062d\u0631\u0645 \u0646\u0641\u0633\u064a \u0645\u0646 \u0627\u0646\u0629 \u0641\u0644\u0648\u0633\u064a \u062a\u0631\u064a\u062d\u0646\u064a \u0648\u062a\u0639\u0632\u0646\u064a \u0645\u0627\u062a\u0639\u062a\u0642\u062f \u064a\u0627\u0643\u0627\u062a\u0628\u0646\u0627 \u0627\u0646\u0629 \u0627\u062c\u062d\u0627\u0641 \u0628\u062d\u0642 \u0627\u0644\u0646\u0641\u0633 !"},
                  {"text": "\u0644\u0627\u0632\u0645 \u062a\u0630\u0643\u0631\u0648\u0627 \u0627\u0633\u0645 \u0627\u0644\u0645\u0643\u062a\u0628 \u0648\u0635\u0627\u062d\u0628 \u0627\u0644\u0645\u0643\u062a\u0628 \u062d\u062a\u0649 \u064a\u0643\u0648\u0646 \u0639\u0628\u0631\u0647"},
                  {"text": "\u0627\u0644\u0644\u0647 \u064a\u0631\u062d\u0645\u0647 \u064a\u0648\u0645\u0647"},
                  {"text": "\u0628\u0633 \u0639\u0627\u064a\u0632\u0629 \u0645\u0646\u0643 \u0627\u0644\u0641\u062a\u0631\u0629 \u0627\u0644\u062c\u0627\u064a\u0629 \u0634\u0648\u064a\u0629 \u062a\u0641\u0643\u064a\u0631 \u0645\u0639\u0627\u0643 \u0644\u0627\u0639\u0628\u064a\u0646 \u0627\u062d\u0633\u0646 \u0645\u0646 \u0627\u064a \u0641\u0631\u064a\u0642 \u0641\u064a \u0627\u0644\u062f\u0648\u0631\u064a \u0648\u0627\u0644\u0633\u0646\u0629 \u062f\u064a \u062a\u0639\u0628\u0643 \u0634\u0648\u064a\u0629 \u0627\u0644\u062f\u0648\u0631\u0629 \u0627\u0644\u0627\u0645\u0645 \u0627\u0644\u0627\u0641\u0631\u064a\u0642\u064a\u0629 \u0644\u0643\u0646 \u0627\u0646\u062a \u0634\u063a\u0627\u0644 \u0643\u0648\u064a\u0633 \u0631\u0628\u0646"}]
        labels = ['DIAL_GLF', 'DIAL_LEV', 'MSA', 'DIAL_EGY']
        predictions = predictor.predict_batch_json(inputs)
        for index, prediction in enumerate(predictions):
            assert labels[index] == prediction.get('label')